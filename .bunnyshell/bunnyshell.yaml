kind: Environment
name: pleasework
type: primary
urlHandle: vwwyup
components:
    -
        kind: Service
        name: attempt-service
        dockerCompose:
            command:
                - bash
                - '-c'
                - 'npm install && npm run watch'
            environment:
                APP_PORT: '3000'
                BROKER_URL: 'amqp://messagebus:5672'
                DB_PASSWORD: week4password
                DB_URL: 'mongodb://mydatabase:27017/attempts'
                DB_USERNAME: week4username
            image: 'node:20.11.1'
            restart: unless-stopped
            working_dir: /var/www/html
    -
        kind: Service
        name: image-service
        dockerCompose:
            command:
                - bash
                - '-c'
                - 'npm install && npm run watch'
            environment:
                APP_PORT: '3000'
                BROKER_URL: 'amqp://messagebus:5672'
                DB_PASSWORD: week4password
                DB_URL: 'mongodb://mydatabase:27017/images'
                DB_USERNAME: week4username
                IMAGGA_EXT_API_KEY: ''
                IMAGGA_EXT_API_SECRET: ''
            image: 'node:20.11.1'
            restart: unless-stopped
            working_dir: /var/www/html
    -
        kind: Service
        name: mailhog
        dockerCompose:
            image: 'mailhog/mailhog:latest'
            ports:
                - '8004:8025'
                - '1025:1025'
            restart: unless-stopped
    -
        kind: Service
        name: messagebus
        dockerCompose:
            image: 'rabbitmq:latest'
            ports:
                - '15672:15672'
            restart: unless-stopped
    -
        kind: Database
        name: mongodb-exporter
        dockerCompose:
            environment:
                MONGODB_URI: 'mongodb://week4username:week4password@mydatabase:27017'
            image: 'bitnami/mongodb-exporter:latest'
            ports:
                - '9216:9216'
            restart: unless-stopped
    -
        kind: Service
        name: myapi
        dockerCompose:
            command:
                - bash
                - '-c'
                - 'npm install && npm run watch'
            environment:
                ATTEMPT_SERVICE_URL: 'http://attempt-service:3000'
                IMAGE_SERVICE_URL: 'http://image-service:3000'
                JWT_SECRET: ''
                TARGET_SERVICE_URL: 'http://target-service:4000'
                USER_SERVICE_URL: 'http://service-user:3000'
            image: 'node:20.11.1'
            ports:
                - '8000:3000'
            working_dir: /var/www/html
    -
        kind: Database
        name: mydatabase
        dockerCompose:
            environment:
                MONGO_INITDB_ROOT_PASSWORD: week4password
                MONGO_INITDB_ROOT_USERNAME: week4username
            image: 'mongo:latest'
            ports:
                - '27017:27017'
            restart: always
        volumes:
            -
                name: mongo-data
                mount: /data/db
                subPath: ''
    -
        kind: Service
        name: prometheus
        dockerCompose:
            command:
                - '--web.enable-lifecycle'
                - '--config.file=/etc/prometheus/config.yml'
            image: 'prom/prometheus:latest'
            ports:
                - '9090:9090'
            restart: unless-stopped
    -
        kind: Service
        name: target-service
        dockerCompose:
            command:
                - bash
                - '-c'
                - 'npm install && npm run watch'
            environment:
                APP_PORT: '3000'
                BROKER_URL: 'amqp://messagebus:5672'
                DB_PASSWORD: week4password
                DB_URL: 'mongodb://mydatabase:27017/targets'
                DB_USERNAME: week4username
            image: 'node:20.11.1'
            restart: unless-stopped
            working_dir: /var/www/html
    -
        kind: Service
        name: user-service
        dockerCompose:
            command:
                - bash
                - '-c'
                - 'npm install && npm run watch'
            environment:
                APP_PORT: '3000'
                BROKER_URL: 'amqp://messagebus:5672'
                DB_PASSWORD: week4password
                DB_URL: 'mongodb://mydatabase:27017/users'
                DB_USERNAME: week4username
            image: 'node:20.11.1'
            restart: unless-stopped
            working_dir: /var/www/html
volumes:
    -
        name: mongo-data
        size: 1Gi
        type: disk
